<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<targets>

  <finroclibrary name="core">
    <sources>
      tAnnotatable.cpp
      tCoreFlags.cpp
      tCoreRegister.h
      tFinrocAnnotation.cpp
      tFrameworkElement.cpp
      tFrameworkElementTags.cpp
      tFrameworkElementTreeFilter.cpp
      tLinkEdge.cpp
      tLockOrderLevels.cpp
      tRuntimeEnvironment.cpp
      tRuntimeListener.h
      tRuntimeSettings.cpp
      datatype/tBounds.h
      datatype/tConstant.cpp
      datatype/tNumber.cpp
      datatype/tUnit.cpp
      port/tAbstractPort.cpp
      port/tAggregatedEdge.h
      port/tEdgeAggregator.cpp
      port/tPortCreationInfoBase.cpp
      port/tPortFlags.cpp
      portdatabase/tFinrocTypeInfo.cpp
      portdatabase/tPortFactory.h
      portdatabase/typeutil.h
      plugin/tPlugins.cpp
      plugin/tPlugin.h
    </sources>
  </finroclibrary>

  <finrocplugin name="data_ports">
    <sources>
      datatype/tXML.cpp
      port/tCombinedPointer.h
      port/tMultiTypePortDataBufferPool.cpp
      port/tPortCreationInfo.h
      port/tPortListenerRaw.h
      port/tPortTypeMap.h
      port/tPullRequestHandler.h
      port/tThreadLocalCache.cpp
      port/cc/*.cpp
      port/cc/*.h
      port/std/*.cpp
      port/std/*.h
      portdatabase/sSerializationHelper.cpp
      portdatabase/tAbstractPortDataManager.h
    </sources>
  </finrocplugin>

  <finrocplugin name="port_api">
    <sources>
      port/tGenericPortImpl.cpp
      port/tGenericPort.h
      port/tPort.cpp
      port/tPortDataPtr.h
      port/tPortDataPtr.h
      port/tPortGroup.cpp
      port/tPortListener.h
      port/tPortListenerAdapter.cpp
      port/tPortQueueFragment.h
      port/tPortUtil.h
      port/tPortWrapperBase.h
    </sources>
  </finrocplugin>

  <finrocplugin name="runtime_construction_actions" libs="dl">
    <sources>
      plugin/runtime_construction_actions.cpp
      plugin/tConnectionListener.h
      plugin/tConstructorCreateModuleAction.h
      plugin/tConstructorCreateModuleActionImpl.h
      plugin/tCreateExternalConnectionAction.h
      plugin/tCreateFrameworkElementAction.cpp
      plugin/tExternalConnection.cpp
      plugin/tFunctionCreateModuleAction.h
      plugin/tParamType.h
      plugin/tStandardCreateModuleAction.h
    </sources>
  </finrocplugin>
      
  <finrocplugin name="runtime_construction" libs="dl">
    <sources>
      plugin/sDynamicLoading.cpp
      finstructable/tFinstructableGroup.cpp
      finstructable/tGroup.cpp
      finstructable/tGroupInterface.cpp
      admin/*.cpp
      datatype/tDataTypeReference.cpp
      datatype/tPortCreationList.cpp
      thread/tThreadContainer.cpp
    </sources>
  </finrocplugin>

  <finrocplugin name="network_base">
    <sources>
      datatype/tFrameworkElementInfo.cpp
      port/net/*.cpp
      port/net/*.h
    </sources>
  </finrocplugin>

  <finrocplugin name="rpc_ports">
    <sources>
      portdatabase/tRPCInterfaceType.cpp
      portdatabase/tSerializableReusable.h
      port/rpc/**.cpp
      port/rpc/**.h
    </sources>
  </finrocplugin>
  
  <finrocplugin name="parameters">
    <sources>
      parameter/*.cpp
      parameter/*.h
    </sources>
  </finrocplugin>

  <finrocplugin name="scheduling">
    <sources>
      thread/tCoreLoopThreadBase.cpp
      thread/tExecutionControl.cpp
      thread/tPeriodicFrameworkElementTask.cpp
      thread/tStartAndPausable.h
      thread/tThreadContainerElement.h
      thread/tThreadContainerThread.cpp
    </sources>
  </finrocplugin>

  <finrocplugin name="structure">
    <sources>
      structure/*.cpp
      structure/*.h
    </sources>
  </finrocplugin>
  
  <finrocplugin name="main_wrapper">
    <sources>
      default_main_wrapper.cpp
    </sources>
  </finrocplugin>  

  <finrocprogram name="finroc">
    <sources>
      finstructable/pFinstructed.cpp
    </sources>
  </finrocprogram>

  <testprogram name="realports">
    <sources>
      test/tRealPortTest5.cpp
    </sources>
  </testprogram>
  
  <testprogram name="queuedports">
    <sources>
      test/tRealPortQueueTest.cpp
    </sources>
  </testprogram>

  <testprogram name="tcp2server">
    <sources>
      test/tRealServerTest.cpp
    </sources>
  </testprogram>

  <testprogram name="tcp2client">
    <sources>
      test/tRealClientTest.cpp
    </sources>
  </testprogram>

  <testprogram name="initial_pushing">
    <sources>
      test/tInitialPushTest.cpp
    </sources>
  </testprogram>

  <testprogram name="p2p">
    <sources>
      test/tPeer2PeerTest.cpp
    </sources>
  </testprogram>
  
  <testprogram name="basic_realtime">
    <sources>
      test/tBasicRealtimeTest.cpp
    </sources>
  </testprogram>

  <testprogram name="configuration">
    <sources>
      test/tPrintConfig.cpp
    </sources>
  </testprogram>

  <finroclibrary name="test_module">
    <sources>
      test/mTestSenseControlModule.cpp
      test/mTestModule.cpp
    </sources>
  </finroclibrary>

  <testprogram name="sense_control_module">
    <sources>
      test/pTestSenseControlModule.cpp
    </sources>
  </testprogram>

  <testprogram name="module">
    <sources>
      test/pTestModule.cpp
    </sources>
  </testprogram>

</targets>
